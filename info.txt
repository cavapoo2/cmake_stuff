#run a script 
cmake -P script.cmake

#setup build tree from source
cmake -B <build_tree> -S <source_tree>

#build the build tree
cmake --build <build_tree>

#to add a sub directory do
add_subdirectory(name_of_directory)

#to add an option, like so, with default OFF, this can be invoked from comand line -DNAME_OF_OPTION=ON
option(NAME_OF_OPTION "Text describing option" OFF)

#cmake dependent option - use this to use cmake_dependent_option
include(CMakeDependentOption)
cmake_dependent_option
cmake_dependent_option(CHAPTER1_PRINT_HELLO_WORLD "Print a nice greeting from chapter1" ON CHAPTER1_PRINT_LANGUAGE_EXAMPLES ON)

#if statement
if(CHAPTER1_PRINT_HELLO_WORLD)
  message(STATUS "Chapter1: welcome to chapter 1!")
endif()

#setting a list 
set(MYLIST abc def ghi) 
message(STATUS "Chapter1: MYLIST is: ${MYLIST}")

#append to list
list(APPEND MYLIST "xyz") 
message(STATUS "Chapter1: MYLIST is: ${MYLIST}")

#find and get values from a list
list(FIND MYLIST def ABC_INDEX) 
list(GET MYLIST ${ABC_INDEX} ABC) 

#add MYVAR as cache variable with the value foo
set(ch1_MYVAR foo CACHE STRING "Variable foo that configures bar")

# set a property for this directory
set_property(DIRECTORY PROPERTY CHAPTER1_PROPERTY "Hello from chapter 1")
get_property(CH1_PROPERTY_VARIABLE DIRECTORY PROPERTY CHAPTER1_PROPERTY)
message(STATUS "Chapter1: Property value for CHAPTER1_PROPERTy is '${CH1_PROPERTY_VARIABLE}'")

#loop examples
set(MYVAR 0)
while(MYVAR LESS "5") 
   message(STATUS "Chapter1: MYVAR is '${MYVAR}'")
   math(EXPR MYVAR "${MYVAR}+1") 
endwhile() 

#foreach loop
foreach(ITEM IN LISTS MYLIST) 
  message(STATUS "Chapter1: ITEM from MYLIST is '${ITEM}'")
endforeach() 






